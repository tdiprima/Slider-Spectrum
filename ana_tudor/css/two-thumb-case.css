/* Make text easier to read (Chrome & Firefox issue) */
* {
  font: inherit;
}

.wrap {
  display: grid;
  /*grid-template-rows: -webkit-max-content 1em;*/
  /*grid-template-rows: max-content 1em;*/
  grid-template: repeat(2, -webkit-max-content) 1em/1fr 1fr;
  grid-template: repeat(2, max-content) 1em/1fr 1fr;
  overflow: hidden;
  position: relative;
  margin: 1em auto;
  width: 20em;
  /* smol 'box' around track: */
  background: linear-gradient(0deg, #ccc 1em, transparent 0);
  font-family: ubuntu mono, consolas, monaco, monospace;
}

/* ? */
[id=multi-lbl] {
  grid-column: 1/span 2;
}

.sr-only {
  position: absolute;
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
}

input[type=range] {
  /*grid-column: 1;*/
  /*grid-row: 2;*/
  grid-column: 1/span 2;
  grid-row: 3;
  z-index: 1;
  top: 0;
  left: 0;
  /* expand it out a little bit: */
  margin: 0;
  background: none;
  /* get rid of white Chrome background */
  color: #000;
  font: inherit;
  /*  */
  pointer-events: none;
}

/* un-colors the track and the handles */
input[type=range]::-webkit-slider-runnable-track,
input[type=range]::-webkit-slider-thumb,
input[type=range] {
  -webkit-appearance: none;
}

/* webkit track */
input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 100%;
  background: none;
}

/* moz track */
input[type=range]::-moz-range-track {
  width: 100%;
  height: 100%;
  background: none;
}

/* webkit thumb (chrome) */
input[type=range]::-webkit-slider-thumb {
  border: none;
  /* get rid of Firefox thumb border */
  width: 1em;
  height: 1em;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: currentcolor;
  pointer-events: auto;
}

/* moz thumb (firefox) */
input[type=range]::-moz-range-thumb {
  border: none;
  /* get rid of Firefox thumb border */
  width: 1em;
  height: 1em;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: currentcolor;
  pointer-events: auto;
}

/* separate :focus styles allows us to see which value we're currently modifying */
input[type=range]:focus {
  z-index: 2;
}

input[type=range]:focus, input[type=range]:focus + output {
  color: darkorange;
}

/* display the values */
output {
  grid-row: 2;
}

output:last-child {
  text-align: right;
}

output::after {
  counter-reset: c var(--c);
  /*content: counter(c);*/
  content: "--" attr(for) ": " counter(c) ";";
}
