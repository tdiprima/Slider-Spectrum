/* multi handle slider - basic flexible setup */
* {
  font: inherit;
}

.wrap {
  --dif: calc(var(--max) - var(--min));
  display: grid;
  grid-template-rows: -webkit-max-content 4em;
  grid-template-rows: max-content 4em;
  overflow: hidden;
  position: relative;
  margin: 1em auto;
  width: 20em;
  background: linear-gradient(0deg, #ccc 4em, transparent 0);
  font-family: ubuntu mono, consolas, monaco, monospace;
}

.wrap::after {
  grid-column: 1/span 2;
  grid-row: 2;
  background: #95a;
}

.sr-only {
  position: absolute;
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
}

input[type=range] {
  grid-column: 1;
  grid-row: 2;
  z-index: 1;
  top: 0;
  left: 0;
  margin: 0;
  background: none;
  /* get rid of white Chrome background */
  --col: #000;
  pointer-events: none;
}

input[type=range]::-webkit-slider-runnable-track, input[type=range]::-webkit-slider-thumb, input[type=range] {
  -webkit-appearance: none;
}

input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 100%;
  background: none;
}

input[type=range]::-moz-range-track {
  width: 100%;
  height: 100%;
  background: none;
}

input[type=range]::-webkit-slider-thumb {
  border: none;
  /* get rid of Firefox thumb border */
  width: 2em;
  height: 4em;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: linear-gradient(90deg, #fff 2px, transparent 0) calc(1em - 1px), radial-gradient(circle, var(--col) calc(1em - 1px), transparent 1em);
  pointer-events: auto;
}

input[type=range]::-moz-range-thumb {
  border: none;
  /* get rid of Firefox thumb border */
  width: 2em;
  height: 4em;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: linear-gradient(90deg, #fff 2px, transparent 0) calc(1em - 1px), radial-gradient(circle, var(--col) calc(1em - 1px), transparent 1em);
  pointer-events: auto;
}

input[type=range]:focus {
  z-index: 2;
  outline: dotted 1px currentcolor;
}

input[type=range]:focus, input[type=range]:focus + output {
  --col: darkorange;
}

output {
  position: absolute;
  right: 0;
  color: var(--col, transparent);
}

output::after {
  counter-reset: c var(--c);
  content: counter(c);
}
